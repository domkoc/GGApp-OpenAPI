openapi: 3.0.3
info:
  title: GG App
  description: |-
    This is the OpenAPI 3.0 Documentation of the GG App.
    
    Useful links:
    - [The OpenAPI repository](https://github.com/domkoc/GGApp-OpenAPI)
    
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: localhost
tags:
  - name: Lobby
    description: Everything that can be done before starting a game
  - name: Game
    description: The game mechanics
  - name: Scoreboard
    description: The Leaderboard tracking the highscores
paths:
  /lobby/new:
    post:
      tags:
        - Lobby
      summary: Create new lobby
      description: Create new lobby by providing a username
      operationId: createLobby
      requestBody:
        description: Create lobby for username
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createLobbyDTO'
        required: true
      responses:
        '200':
          description: Successfully created lobby with id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/joinLobbyDTO'
  /lobby/join:
    post:
      tags:
        - Lobby
      summary: Join existing lobby
      description: Join existing lobby by providing a username and lobby id
      operationId: joinLobby
      requestBody:
        description: Join lobby by id
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/joinLobbyDTO'
        required: true
      responses:
        '200':
          description: Successfully joined lobby with id or created one if didn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/joinLobbyDTO'
  /lobby/{id}:
    get:
      tags:
        - Lobby
      summary: Poll lobby state
      description: Poll current state of a lobby by id
      operationId: getLobby
      responses:
        '200':
          description: Successfully joined lobby with id or created one if didn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LobbyDTO'
components:
  schemas:
    joinLobbyDTO:
      type: object
      properties:
        username:
          type: string
          example: Player1
        lobbyId:
          type: string
          example: 00000000-000000000000000
    createLobbyDTO:
      type: object
      properties:
        username:
          type: string
          example: Player1
        lobbyId:
          type: string
          example: null
    LobbyDTO:
      type: object
      properties:
        state:
          type: string
          enum: [lobby, round, score, end]
          example: score
        players:
          type: object
          properties:
            username: 
              type: string
            score:
              type: integer
            isPlaying:
              type: boolean
          example:
            - username: Player1
              score: 1000
              isPlaying: true
            - username: Player2
              score: 500
              isPlaying: false
            - username: Player3
              score: 750
              isPlaying: true
