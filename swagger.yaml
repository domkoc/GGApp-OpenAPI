openapi: 3.0.3
info:
  title: GG App
  description: |-
    This is the OpenAPI 3.0 Documentation of the GG App.
    
    Useful links:
    - [The OpenAPI repository](https://github.com/domkoc/GGApp-OpenAPI)
    
  version: 0.1.1
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://127.0.0.1:4010
tags:
  - name: Lobby
    description: Everything that can be done before starting a game
  - name: Game
    description: The game mechanics
  - name: Scoreboard
    description: The Leaderboard tracking the highscores
paths:
  /lobby/new:
    post:
      tags:
        - Lobby
      summary: Create new lobby
      description: Create new lobby by providing a username
      operationId: createLobby
      requestBody:
        description: Create lobby for username with null id
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LobbyDTO'
        required: true
      responses:
        '200':
          description: Successfully created lobby with id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LobbyDTO'
  /lobby/{lobby_id}/start:
    post:
      tags:
        - Lobby
      summary: Start lobby by id
      description: Start the lobby with the given id
      operationId: startLobby
      responses:
        '200':
          description: Successfully started lobby with id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gameStateDTO'
  /lobby/join:
    post:
      tags:
        - Lobby
      summary: Join existing lobby
      description: Join existing lobby by providing a username and lobby id
      operationId: joinLobby
      requestBody:
        description: Join lobby by id
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LobbyDTO'
        required: true
      responses:
        '200':
          description: Successfully joined lobby with id or created one if didn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LobbyDTO'
  /game/{lobby_id}:
    get:
      tags:
        - Game
      summary: Poll lobby state
      description: Poll current state of a lobby by id
      operationId: getGameState
      responses:
        '200':
          description: Successfully joined lobby with id or created one if didn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gameStateDTO'
  /game/{lobby_id}/round:
    get:
      tags:
        - Game
      summary: Poll round tasks
      description: Poll tasks of current round
      operationId: getTasks
      responses:
        '200':
          description: The tasks of the current round and their time limit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/roundDTO'
    post: 
      tags:
        - Game
      summary: Post answers
      description: Post the answers of the given round
      operationId: postTasks
      requestBody:
        description: Post answers to tasks
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/answersDTO'
        required: true
      responses:
        '200':
          description: Successfully submitted answers
  /scoreboard:
    get:
      tags:
        - Scoreboard
      summary: Poll scoreboard
      description: Poll current state of scoreboard
      operationId: getScoreboard
      responses:
        '200':
          description: The scores of players currently on the scoreboard
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scoreboardDTO'
    post: 
      tags:
        - Scoreboard
      summary: Post score to scoreboard
      description: Post the users score to the scoreboard
      operationId: postScore
      requestBody:
        description: Lobby and username of score to post
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newScoreDTO'
        required: true
      responses:
        '200':
          description: Successfully submitted score


components:
  schemas:
    LobbyDTO:
      type: object
      properties:
        username:
          type: string
          example: Player1
        lobbyId:
          type: string
    gameStateDTO:
      type: object
      properties:
        state:
          type: string
          enum: [lobby, start, round, score, end]
          example: start
        players:
          type: object
          properties:
            username: 
              type: string
            score:
              type: integer
            isPlaying:
              type: boolean
    roundDTO:
      type: object
      properties:
        tasks:
          type: array
          items:
            type: object
            properties:
              title: 
                type: string
              coordinates:
                type: object
                properties:
                  longitude: 
                    type: number
                  lattitude: 
                    type: number
              seconds:
                type: number
    answersDTO:
      type: object
      properties:
        username:
          type: string
        answers:
          type: array
          items:
            type: object
            properties:
              title: 
                type: string
              coordinates:
                type: object
                properties:
                  longitude: 
                    type: number
                  lattitude: 
                    type: number
    scoreboardDTO:
      type: object
      properties:
        players:
          type: array
          items:
            type: object
            properties:
              username: 
                type: string
              score:
                type: integer
    newScoreDTO:
      type: object
      properties:
        lobby_id:
          type: string
        username:
          type: string
